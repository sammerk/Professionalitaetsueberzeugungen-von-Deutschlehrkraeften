{
  "hash": "3168c7a7748d0d79d5b188ae8e51f8f8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Sample Size Sufficiency Analysis\"\n---\n\n\n\n\n\n## Data Import\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| cache: true\nlibrary(simsem)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: lavaan\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'lavaan' was built under R version 4.4.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThis is lavaan 0.6-19\nlavaan is FREE software! Please report any bugs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n#################################################################\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThis is simsem 0.5-16\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nsimsem is BETA software! Please report any bugs.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nsimsem was first developed at the University of Kansas Center for\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nResearch Methods and Data Analysis, under NSF Grant 1053160.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n#################################################################\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'simsem'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:lavaan':\n\n    inspect\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nlibrary(haven)\nlibrary(lavaan)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nlibrary(semPlot)\nlibrary(semTools)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n \n###############################################################################\nThis is semTools 0.5-6\nAll users of R (or SEM) are invited to submit functions or ideas for functions.\n###############################################################################\n\nAttaching package: 'semTools'\n\nThe following object is masked from 'package:readr':\n\n    clipboard\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\ndata2023 <- read_spss(\"../_data/data_original_study.sav\") %>% \n  mutate(bio_sh_f1_01 = f1_1,\n         bio_sh_f1_02 = f1_2,\n         kom_aw_f1_03 = f1_3,\n         str_rh_f1_04 = f1_4,\n         bio_sh_f1_05 = f1_5,\n         kom_aw_f1_06 = f1_6,\n         str_sh_f1_07 = f1_7,\n         str_rh_f1_08 = f1_8,\n         met_rh_f1_09 = f1_9,\n         kom_sh_f1_10 = f1_10,\n         met_sh_f1_11 = f1_11,\n         kom_aw_f1_12 = f1_12,\n         str_sh_f1_13 = f1_13,\n         met_00_f1_14 = f1_14,\n         met_00_f1_15 = f1_15,\n         bio_00_f1_16 = f1_16)\n```\n:::\n\n\n\n\n\n\n## CFA with all items\n### CFA a priori vs EFA determinined model\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| cache: true\ncfa_mod_onedim <- \n  \"kom =~ kom_aw_f1_03 + kom_aw_f1_06 + kom_sh_f1_10 + kom_aw_f1_12\n          + str_rh_f1_04 + str_sh_f1_07 + str_rh_f1_08 + str_sh_f1_13\n          + bio_sh_f1_01 + bio_sh_f1_02 + bio_sh_f1_05 + bio_00_f1_16\n          + met_rh_f1_09 + met_sh_f1_11 + met_00_f1_14 + met_00_f1_15\"\ncfa_fit_onedim <- cfa(cfa_mod_onedim, \n                       data = data2023,\n                       sampling.weights = \"weight0\")\nsemPaths(cfa_fit_onedim)\n```\n\n::: {.cell-output-display}\n![](sample_size_sufficiency_analysis_files/figure-jats/unnamed-chunk-2-1.png)\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nfitmeasures(cfa_fit_onedim, \n            c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n306.647 104.000   0.000   0.919   0.906   0.069   0.048 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\ncfa_mod_apriori <- \n  \"kom =~ kom_aw_f1_03 + kom_aw_f1_06 + kom_sh_f1_10 + kom_aw_f1_12\n   str =~ str_rh_f1_04 + str_sh_f1_07 + str_rh_f1_08 + str_sh_f1_13\n   bio =~ bio_sh_f1_01 + bio_sh_f1_02 + bio_sh_f1_05 + bio_00_f1_16\n   met =~ met_rh_f1_09 + met_sh_f1_11 + met_00_f1_14 + met_00_f1_15\"\ncfa_fit_apriori <- cfa(cfa_mod_apriori, \n                       data = data2023,\n                       sampling.weights = \"weight0\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->lav_object_post_check():  \n   covariance matrix of latent variables is not positive definite ; use \n   lavInspect(fit, \"cov.lv\") to investigate.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsemPaths(cfa_fit_apriori)\n```\n\n::: {.cell-output-display}\n![](sample_size_sufficiency_analysis_files/figure-jats/unnamed-chunk-2-2.png)\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nfitmeasures(cfa_fit_apriori, \n            c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n266.553  98.000   0.000   0.933   0.917   0.065   0.047 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\ncfa_mod_aposteriori <- \n  \"aw =~ kom_aw_f1_03 + kom_aw_f1_06 + kom_aw_f1_12\n   rh =~ str_rh_f1_04 + str_rh_f1_08 + met_rh_f1_09\n   sh =~ bio_sh_f1_01 + bio_sh_f1_05 + bio_sh_f1_02 + str_sh_f1_07 +\n         str_sh_f1_13 + kom_sh_f1_10 + met_sh_f1_11\"\ncfa_fit_aposteriori <- cfa(cfa_mod_aposteriori, \n                       data = data2023,\n                       sampling.weights = \"weight0\")\nsemPaths(cfa_fit_aposteriori)\n```\n\n::: {.cell-output-display}\n![](sample_size_sufficiency_analysis_files/figure-jats/unnamed-chunk-2-3.png)\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nfitmeasures(cfa_fit_aposteriori, \n            c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n140.601  62.000   0.000   0.956   0.945   0.056   0.040 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsummary(compareFit(cfa_fit_onedim, cfa_fit_apriori, cfa_fit_aposteriori,\n             nested = F))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n####################### Model Fit Indices ###########################\n                    chisq.scaled df.scaled pvalue.scaled rmsea.robust\ncfa_fit_aposteriori      93.675†        62          .006        .043†\ncfa_fit_apriori         180.290         98          .000        .055 \ncfa_fit_onedim          203.876        104          .000        .060 \n                    cfi.robust tli.robust  srmr        aic        bic\ncfa_fit_aposteriori      .973†      .966† .040† 15168.828† 15285.084†\ncfa_fit_apriori          .950       .939  .047  18151.152  18303.487 \ncfa_fit_onedim           .938       .929  .048  18179.246  18307.529 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsummary(compareFit(cfa_fit_onedim, cfa_fit_apriori,\n             nested = T))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n################### Nested Model Comparison #########################\n\nScaled Chi-Squared Difference Test (method = \"satorra.bentler.2001\")\n\nlavaan->unknown():  \n   lavaan NOTE: The \"Chisq\" column contains standard test statistics, not the \n   robust test that should be reported per model. A robust difference test is \n   a function of two standard (not robust) statistics.\n                 Df   AIC   BIC  Chisq Chisq diff Df diff Pr(>Chisq)   \ncfa_fit_apriori  98 18151 18304 266.55                                 \ncfa_fit_onedim  104 18179 18308 306.65     20.856       6   0.001947 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n####################### Model Fit Indices ###########################\n                chisq.scaled df.scaled pvalue.scaled rmsea.robust cfi.robust\ncfa_fit_apriori     180.290†        98          .000        .055†      .950†\ncfa_fit_onedim      203.876        104          .000        .060       .938 \n                tli.robust  srmr        aic        bic\ncfa_fit_apriori      .939† .047† 18151.152† 18303.487†\ncfa_fit_onedim       .929  .048  18179.246  18307.529 \n\n################## Differences in Fit Indices #######################\n                                 df.scaled rmsea.robust cfi.robust tli.robust\ncfa_fit_onedim - cfa_fit_apriori         6        0.004     -0.012      -0.01\n                                  srmr    aic   bic\ncfa_fit_onedim - cfa_fit_apriori 0.001 28.094 4.041\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsummary(compareFit(cfa_fit_onedim, cfa_fit_aposteriori,\n             nested = T))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->unknown():  \n   some models are based on a different set of observed variables\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n################### Nested Model Comparison #########################\n\nScaled Chi-Squared Difference Test (method = \"satorra.bentler.2001\")\n\nlavaan->unknown():  \n   lavaan NOTE: The \"Chisq\" column contains standard test statistics, not the \n   robust test that should be reported per model. A robust difference test is \n   a function of two standard (not robust) statistics.\n                     Df   AIC   BIC  Chisq Chisq diff Df diff Pr(>Chisq)    \ncfa_fit_aposteriori  62 15169 15285 140.60                                  \ncfa_fit_onedim      104 18179 18308 306.65     110.06      42  5.207e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n####################### Model Fit Indices ###########################\n                    chisq.scaled df.scaled pvalue.scaled rmsea.robust\ncfa_fit_aposteriori      93.675†        62          .006        .043†\ncfa_fit_onedim          203.876        104          .000        .060 \n                    cfi.robust tli.robust  srmr        aic        bic\ncfa_fit_aposteriori      .973†      .966† .040† 15168.828† 15285.084†\ncfa_fit_onedim           .938       .929  .048  18179.246  18307.529 \n\n################## Differences in Fit Indices #######################\n                                     df.scaled rmsea.robust cfi.robust\ncfa_fit_onedim - cfa_fit_aposteriori        42        0.016     -0.035\n                                     tli.robust  srmr      aic      bic\ncfa_fit_onedim - cfa_fit_aposteriori     -0.037 0.008 3010.418 3022.445\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## CFA with a posterior items only\n### CFA a priori vs EFA determinined model\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| cache: true\ncfa_mod_onedim_selected <- \n  \"kom =~ kom_aw_f1_03 + kom_aw_f1_06 + kom_sh_f1_10 + kom_aw_f1_12 +\n          str_rh_f1_04 + str_sh_f1_07 + str_rh_f1_08 + str_sh_f1_13 +\n          bio_sh_f1_01 + bio_sh_f1_02 + bio_sh_f1_05 +\n          met_rh_f1_09 + met_sh_f1_11\"\ncfa_fit_onedim_selected <-\n  cfa(cfa_mod_onedim_selected,\n      data = data2023,\n      sampling.weights = \"weight0\")\nsemPaths(cfa_fit_onedim_selected)\n```\n\n::: {.cell-output-display}\n![](sample_size_sufficiency_analysis_files/figure-jats/unnamed-chunk-3-1.png)\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nfitmeasures(cfa_fit_onedim_selected, \n            c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n226.238  65.000   0.000   0.911   0.893   0.078   0.052 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\ncfa_mod_apriori_selected <- \n  \"kom =~ kom_aw_f1_03 + kom_aw_f1_06 + kom_sh_f1_10 + kom_aw_f1_12\n   str =~ str_rh_f1_04 + str_sh_f1_07 + str_rh_f1_08 + str_sh_f1_13\n   bio =~ bio_sh_f1_01 + bio_sh_f1_02 + bio_sh_f1_05\n   met =~ met_rh_f1_09 + met_sh_f1_11\"\ncfa_fit_apriori_selected <-\n  cfa(cfa_mod_apriori_selected,\n      data = data2023,\n      sampling.weights = \"weight0\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->lav_object_post_check():  \n   covariance matrix of latent variables is not positive definite ; use \n   lavInspect(fit, \"cov.lv\") to investigate.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsemPaths(cfa_fit_apriori_selected)\n```\n\n::: {.cell-output-display}\n![](sample_size_sufficiency_analysis_files/figure-jats/unnamed-chunk-3-2.png)\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nfitmeasures(cfa_fit_apriori_selected, \n            c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n178.401  59.000   0.000   0.934   0.913   0.071   0.050 \n```\n\n\n:::\n:::\n\n\n\n\n\n## Sample Size Sufficiency Analysis\n### One Dim (=TRUE) vs. a priori \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| cache: true\nnsim <- 10000\nn <- 100\n\nmo_onedim_gen_onedim_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_onedim,\n      generate = cfa_fit_onedim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_apriori_gen_onedim_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_apriori,\n      generate = cfa_fit_onedim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nanova(mo_onedim_gen_onedim_sim, mo_apriori_gen_onedim_sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$summary\n            chisq  df      aic      bic      rmsea       cfi       tli\nObject 1 101.8968  98 8922.730 9048.066 0.01422615 0.9930658 0.9959773\nObject 2 108.1955 104 8917.029 9022.575 0.01418060 0.9927558 0.9959190\n               srmr\nObject 1 0.03721827\nObject 2 0.03805302\n\n$diff\n   chisq diff       df diff    power diff      aic diff      bic diff \n 6.298636e+00  6.000000e+00  6.280000e-02 -5.701364e+00 -2.549127e+01 \n   rmsea diff      cfi diff      tli diff     srmr diff \n-4.554581e-05 -3.099267e-04 -5.835568e-05  8.347531e-04 \n\n$varyParam\nNULL\n```\n\n\n:::\n:::\n\n\n\n\n\n### One Dim vs. a priori (=TRUE)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_onedim_gen_apriori_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_onedim,\n      generate = cfa_fit_apriori)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->lav_start_check_cov():  \n   starting values imply a correlation larger than 1; variables involved are: \n   str bio\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_apriori_gen_apriori <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_apriori,\n      generate = cfa_fit_apriori)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->lav_start_check_cov():  \n   starting values imply a correlation larger than 1; variables involved are: \n   str bio\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nanova(mo_onedim_gen_apriori_sim, mo_apriori_gen_apriori)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$summary\n            chisq  df      aic      bic      rmsea       cfi       tli\nObject 1 101.9483  98 8921.891 9047.227 0.01424315 0.9930550 0.9959354\nObject 2 127.2751 104 8935.218 9040.764 0.03062972 0.9790587 0.9765173\n               srmr\nObject 1 0.03768845\nObject 2 0.04213129\n\n$diff\n  chisq diff      df diff   power diff     aic diff     bic diff   rmsea diff \n25.326835161  6.000000000  0.907800000 13.326835161 -6.463069038  0.016386566 \n    cfi diff     tli diff    srmr diff \n-0.013996275 -0.019418091  0.004442846 \n\n$varyParam\nNULL\n```\n\n\n:::\n:::\n\n\n\n\n\n### One Dim (=TRUE) vs. a posteriori\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_onedim_gen_onedim_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_onedim,\n      generate = cfa_fit_onedim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_aposteriori_gen_onedim_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_aposteriori,\n      generate = cfa_fit_onedim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nanova(mo_onedim_gen_onedim_sim, mo_aposteriori_gen_onedim_sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$summary\n             chisq  df      aic      bic      rmsea       cfi       tli\nObject 1  64.25121  62 7484.994 7580.645 0.01470251 0.9929399 0.9967555\nObject 2 108.19545 104 8917.029 9022.575 0.01418060 0.9927558 0.9959190\n               srmr\nObject 1 0.03698886\nObject 2 0.03805302\n\n$diff\n   chisq diff       df diff    power diff      aic diff      bic diff \n 4.394424e+01  4.200000e+01  7.850000e-02  1.432035e+03  1.441930e+03 \n   rmsea diff      cfi diff      tli diff     srmr diff \n-5.219057e-04 -1.840974e-04 -8.365452e-04  1.064162e-03 \n\n$varyParam\nNULL\n```\n\n\n:::\n:::\n\n\n\n\n\n\n### One Dim vs. a posteriori (=TRUE) \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_onedimsel_gen_aposteriorisel_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_onedim_selected,\n      generate = cfa_fit_aposteriori)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_aposteriori_gen_aposteriori_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_aposteriori,\n      generate = cfa_fit_aposteriori)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nanova(mo_onedimsel_gen_aposteriorisel_sim, mo_aposteriori_gen_aposteriori_sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$summary\n             chisq df      aic      bic      rmsea       cfi       tli\nObject 1  64.18641 62 7440.911 7536.562 0.01477120 0.9933051 0.9969924\nObject 2 109.65576 65 7480.380 7566.136 0.05718587 0.9477924 0.9373689\n               srmr\nObject 1 0.03716268\nObject 2 0.05001960\n\n$diff\n chisq diff     df diff  power diff    aic diff    bic diff  rmsea diff \n45.46934825  3.00000000  0.99990000 39.46934825 29.57439615  0.04241467 \n   cfi diff    tli diff   srmr diff \n-0.04551273 -0.05962354  0.01285693 \n\n$varyParam\nNULL\n```\n\n\n:::\n:::\n\n\n\n\n\n\n### A priori vs. a posteriori (=TRUE) \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_apriori_gen_aposteriorisel_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_apriori_selected,\n      generate = cfa_fit_aposteriori)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_aposteriorisel_gen_aposteriori_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_aposteriori,\n      generate = cfa_fit_aposteriori)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\n## Percentage of correct decision for non-nested models via BIC AIC\nsum(mo_apriori_gen_aposteriorisel_sim@fit$bic > \n    mo_aposteriorisel_gen_aposteriori_sim@fit$bic)/nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsum(mo_apriori_gen_aposteriorisel_sim@fit$aic > \n    mo_aposteriorisel_gen_aposteriori_sim@fit$aic)/nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9986\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsum(mo_apriori_gen_aposteriorisel_sim@fit$srmr > \n    mo_aposteriorisel_gen_aposteriori_sim@fit$srmr)/nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9966\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsum(mo_apriori_gen_aposteriorisel_sim@fit$rmsea > \n    mo_aposteriorisel_gen_aposteriori_sim@fit$rmsea)/nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9808\n```\n\n\n:::\n:::\n\n\n\n\n\n### A priori (=TRUE) vs. a posteriori\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_aposteriori_gen_apriorisel_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_aposteriori,\n      generate = cfa_fit_apriori_selected)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->lav_start_check_cov():  \n   starting values imply a correlation larger than 1; variables involved are: \n   kom met\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->lav_start_check_cov():  \n   starting values imply a correlation larger than 1; variables involved are: \n   str met\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->lav_start_check_cov():  \n   starting values imply a correlation larger than 1; variables involved are: \n   bio met\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nmo_apriorisel_gen_apriorisel_sim <-\n  sim(nsim,\n      n = 200, multicore = TRUE,\n      model = cfa_fit_apriori_selected,\n      generate = cfa_fit_apriori_selected)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProgress tracker is not available when 'multicore' is TRUE.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->lav_start_check_cov():  \n   starting values imply a correlation larger than 1; variables involved are: \n   kom met\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->lav_start_check_cov():  \n   starting values imply a correlation larger than 1; variables involved are: \n   str met\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: lavaan->lav_start_check_cov():  \n   starting values imply a correlation larger than 1; variables involved are: \n   bio met\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\n## Percentage of correct decision for non-nested models via BIC AIC\nsum(mo_aposteriori_gen_apriorisel_sim@fit$bic > \n    mo_apriorisel_gen_apriorisel_sim@fit$bic)/nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4088\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsum(mo_aposteriori_gen_apriorisel_sim@fit$aic > \n    mo_apriorisel_gen_apriorisel_sim@fit$aic)/nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8657\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsum(mo_aposteriori_gen_apriorisel_sim@fit$srmr > \n    mo_apriorisel_gen_apriorisel_sim@fit$srmr)/nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9616\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| cache: true\nsum(mo_aposteriori_gen_apriorisel_sim@fit$rmsea > \n    mo_apriorisel_gen_apriorisel_sim@fit$rmsea)/nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8036\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}